require(adegenet)
require(memgene)
require(rgdal)
require(raster)
require(ggplot2)


dm<-read.csv("C:\\Users\\Nathan\\Desktop\\2015THESISDATA\\Genetics\\Dps.csv")
dm<-dm[,-1]
ps<-read.csv("C:\\Users\\Nathan\\Desktop\\2015THESISDATA\\Genetics\\ORDERED_Genetics_Codom_PS.csv")
ps_2<-ps[1:239]

ps_2[upper.tri(ps_2)]<-t(ps_2)[upper.tri(ps_2)]
ps_3<-cbind(ps[,240],ps_2)
colnames(ps_3)<-c("ID",colnames(ps_2))

wgs_coords<-read.csv("C:\\Users\\Nathan\\Desktop\\2015THESISDATA\\Site_WGS84\\All_Site_Locs_84.csv")
head(wgs_coords)
ID_coords<-cbind(wgs_coords[,3],wgs_coords[,8:9])
Coords<-ID_coords[,2:3]
if(!exists("Analysis"))
  Analysis <- mgQuick(ps_2,Coords)


elev <- getData('alt', download=TRUE, country='USA', mask=TRUE)
elev.48 <- elev[[1]]
boundary<-readOGR(dsn='C:\\Users\\Nathan\\Desktop\\2015THESISDATA\\shapefiles',layer='boundary_84')
resample_scale<-raster('C:\\Users\\Nathan\\Desktop\\2015THESISDATA\\shapefiles\\slope_img_84.tif')
elev_site<-crop(elev.48,boundary)
elev_site<-resample(elev_site,resample_scale)
elev_site<-mask(elev_site,boundary)


## Visualize results of the first memgene variables 
dev.new()
plot.new()
par(mfcol=c(1,2))
plot(elev_site,col = gray.colors(10, start = 0.9, end = 0.3, gamma = 2.2, alpha = NULL),legend=FALSE,
     xlab='Longitude',ylab='Latitude',pin=c(6,6))
plot(boundary,add=TRUE,pin=c(6,6))
mgMap(Coords, scale(Analysis$memgene[,1]),legend=TRUE,add=TRUE)

Analysis2 <- mgQuick(dm,Coords)
## Visualize results of the first memgene variables 
head(Coords)

##Get background map


plot(elev_site,col = gray.colors(10, start = 0.9, end = 0.3, gamma = 2.2, alpha = NULL),legend=FALSE,
     xlab='Longitude',ylab='Latitude',pin=c(6,6))
plot(boundary,add=TRUE,pin=c(6,6))
mgMap(Coords, scale(Analysis2$memgene[,1]),legend=TRUE,add=TRUE)

boundary
elev_site
ggplot() + geom_raster(elev_site,aes(x=Longitude, y=Latitude))

plot(scale(Analysis$memgene[,1])-scale(Analysis2$memgene[,1]))
dev.new()
plot(as.matrix(dm)~as.matrix(ps_2))
